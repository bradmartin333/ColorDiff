<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PBX.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT+jYpCohSlELLZQKwVREUuJYhAUJIkQj8LdjYmB7Bp2E2wsBVvBwqPxKmystbWwFQTBA8TSykrR
        RmT9ZyMkCBEcGObjzbzHzBsIHORMy63rA8suOLFoREvOzmkNzwQJ0UwvId1081Px8QRVx8ctNWq96VVZ
        /G80pZZcE2o04REz7xSEF4WHVgt5xTvCYXNZTwmfCvc4ckHhe6UbJX5RnPE5oDLDTiI2KhwW1jIVbFSw
        uexYwoPCnSnLlvxAssQpxWuKrVzR/LmnemFoyZ6JK11mB1EmmGIaDYMiWXIUpK8stiguMdmPVPG3+/5p
        cRniymKKY4wVLHTfj/qD39266YH+UlIoAvVPnvfWBQ1b8LXpeZ+Hnvd1BLWPcGGX/SsHMPwu+mZZ69yH
        lnU4uyxrxjacb0DbQ153dF+qlRlIp+H1RL5pFlqvoXG+1NvPPsd3kJCuJq9gdw+6M5K9UOXdwcre/jzj
        90fkG3LHcqe/oYa9AAAACXBIWXMAAC4iAAAuIgGq4t2SAAAAB3RJTUUH5ggMDwgIuzHjQQAAABl0RVh0
        Q29tbWVudABDcmVhdGVkIHdpdGggR0lNUFeBDhcAABtrSURBVHhe7d356xXVH8dx/4F+7ad+6od+6Id+
        EIIggggiQkIilAjDMIKUkkJaMa2sbLF90dA2tT3bs2zH1q+2aLbYLqVtlpW2Z82X13Qu3Oa+z/3McmZu
        b30+4A3fr5+Zc8bb576cOXPmzLgMAJwgsAC4QWABcIPAAuAGgQXADQILgBsEFgA3CCwAbhBYANwgsAC4
        QWABcIPAAuAGgQXADQILgBsEFgA3CCwAbhBYANwgsAC4QWABcIPAAuAGgQXADQILgBsEFgA3CCwAbhBY
        ANwgsAC4QWABcIPAAuAGgQXADQILgBsEFgA3CCwAbhBYANwgsAC4QWABcIPAAuAGgQXADQILgBsEFgA3
        CCwAbhBYANwgsAC4QWABcIPAAuAGgQXADQILgBsEFgA3CCwAbhBYANwgsAC4QWABcIPAAuAGgQXADQIL
        gBsEFgA3CCwAbhBYANwgsAC4QWABcIPAAuAGgQXADQILgBsEFgA3CCwAbhBYANwgsAC4QWABcIPAAuAG
        gQXADQILgBsEFgA3CCwAbhBYANwgsAC4QWABcIPAAuAGgQXADQILgBsEFgA3CCwAbhBYANwgsAC4QWAB
        cIPAAuAGgQXADQILgBsEFgA3CCwAbhBYANwgsAC4QWABCf3000/Zxo0bs1WrVmWLFy/O5s6dm02ZMiU7
        9NBDs3333TeviRMnZieeeGJ29tlnZwsXLsy3ffvtt7Nvvvkm+/vvv0NLsBBYgX6hxo0bV6r22GOP/Bfv
        wAMPzCZMmJAdf/zx2VlnnZVdccUV2V133ZU999xz2QcffJDt2LEjtN6+Ksffq7333jvbf//98y/Q9OnT
        s/nz52fLly/PXnjhhezrr78OLY/On3/+mR1yyCHmsfdq3bp1YevR2b59e/bMM89ks2fPNo+xSunve8MN
        N2Rr167Nfv7559ADegisoM4XvkzNmDEje+CBB7LPP/889NSONo5/8uTJ2WOPPZb98ssvoZdu6azDOq7+
        uvzyy8PW3du6dWt+FqXgt46tae255575P4L6HHbu3Bl63b0RWEFbgdVfugx45ZVX8jOH1No8fp1JPvnk
        k9lff/0VeuvGNddcYx5Pf+lL3eWZrPz222/ZPffck+21117mMbVRRx11VPb000/v9mddBFbQRWD16thj
        j83/1Uypi+M/77zzOjvb0hez7JnL6tWrw17t05nytGnTzOPoonTJvjsjsIIuA6tXt912W/b777+HI2im
        q+M/9dRT8zOMtr300ktm/1bNmjUr7NWuDRs25GOX1jH0l47nkUceyd577718IP3XX3/NL+l0hqr//eOP
        P2ZfffVVtn79+mzlypXZggULsv32289sq1gEFnKxL/wff/wRtvg3/fLp0k5nAtu2bcs2bdqUDwBrzEdn
        IrpUsdor1kknnZT/AjdV9fhFfweFjwaNdfyvvvpqdt1112X77LOP2VavtE3bdBOj2O8RRxyRX1YX/1zV
        9k2C1157Lb/ZYvWt0tngsmXL8oCqQ79LH374YXbLLbdk48ePN/tQEVjI1fnCD6N/SfUv8gUXXGC2219T
        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
        g8AC4AaBBcANAguAGwQWADcILABuEFgA3CCwALhBYAFwg8AC4AaBBcANAguAGwQWADcILABuEFgA3CCw
        ALhBYAFwg8AC4AaBBcANAguAGwQWADcILABuEFgA3CCwALhBYAFwg8AC4AaBhd3CTz/9lG3cuDFbtWpV
        tnjx4mzu3LnZlClTskMPPTTbd99985o4cWJ24oknZmeffXa2cOHCfNu33347++abb7K///47tIRR2qUC
        S79s48aNa1QHHnhgaG1s+mW32ujV888/H7ZM76233jL77K8vv/wybJ3Wn3/+mR1yyCFmn71at25d2Hp0
        tm/fnj3zzDPZ7NmzzWOsUvr73nDDDdnatWuzn3/+OfRQz1i/N23UxRdfHHr3jcAqVMrAmjRpUv7lbsOZ
        Z55p9tlfbQWWzjqs/vrr8ssvD1t3b+vWrflZ1N57720eW9Pac889syuuuCL/HHbu3Bl6LY/Aqo/AKlTK
        wFL973//C1un8/HHH5t9FautwLrmmmvM/vpLX+odO3aEPbrx22+/Zffcc0+21157mcfURh111FHZ008/
        Xemsi8Cqj8AqVOrAOv7447O//vor7JGGzl6svorVRmDpi1n2zGX16tVhr/Z9/vnn2bRp08zj6KKWL18e
        jmRsBFZ9BFahUgeWav369WGP5r7++muzD6vaCKyXXnrJ7MuqWbNmhb3atWHDhnzQ3DqG/tLxPPLII9l7
        772XD6T/+uuv+SWd/kHR//7xxx+zr776Kv/vtXLlymzBggXZfvvtZ7ZVLAKrG7tUYMUohKz/iH/88UfY
        op6yv3innnpq2KO5W265xezDqjYC66yzzhro54gjjoj+Y6GAbdNrr72W7bHHHmbfKp0NLlu2LA+oOjQG
        +eGHH+af+/jx480+VCkCq+nv4+6AwGrA+sWbOnXqwJ+pdEu9KZ0BFC/H9P+PPvrof/1Zr1IHlgazrX5W
        rFiRj+NYP3v44YfD3unpMx02XjVnzpzaQWXRGJnuOh522GEDfRFY3SCwGrB+8W6++ebs3HPPHfhzzftp
        6sEHHxxod+nSpdHb9qkD67HHHjP72bJlS/b999+bP9Od0jbmMG3bti076KCDzD5Vd911V607eGXo8lGD
        +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
</value>
  </data>
</root>